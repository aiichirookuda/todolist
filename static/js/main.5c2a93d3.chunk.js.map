{"version":3,"sources":["components/Category.jsx","components/Input.jsx","components/Todo.jsx","components/Done.jsx","App.js","index.js"],"names":["Category","props","allChecked","toggle","className","onClick","Input","onSubmitAdd","todoText","onChangeTodoText","onSubmit","placeholder","value","onChange","Todo","modal","style","icon","title","details","deadline","detailsText","deadlineDate","onChangeDetailsText","onChangeDeadlineDate","onClickDelete","onClickComplete","setNewDetails","setNewDeadline","getDetailsText","getDeadlineDate","today","useState","isOpen","setIsOpen","type","backgroundColor","class","Done","completionDate","onClickReturn","App","incompleteTodo","setIncompleteTodo","completeTodo","setCompleteTodo","now","Date","year","getFullYear","month","getMonth","slice","date","getDate","setTodoText","setDetailsText","e","target","setDeadlineDate","setToggle","document","getElementById","checked","preventDefault","newTodo","id","map","todo","i","splice","newIncompleteTodo","newCompleteTodo","newDetails","newDeadline","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5c2a93d3.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Category = (props) => {\n\n  const { allChecked, toggle } = props;\n  \n  return (\n    <div className='category'>\n      <label\n        className='done-button'\n        onClick={allChecked}>\n        {toggle}\n      </label>\n    </div>\n\n  );\n};","import React from 'react';\n\nexport const Input = (props) => {\n\n  const { onSubmitAdd, todoText, onChangeTodoText } = props;\n\n  return (\n    <form onSubmit={onSubmitAdd}>\n      <input className='input-todo' placeholder='Please add new TODO' value={todoText} onChange={onChangeTodoText} />\n    </form>\n  );\n};","import React, { useState } from 'react';\n\nexport const Todo = (props) => {\n\n  const {\n    title, details, deadline,\n    detailsText, deadlineDate,\n    onChangeDetailsText, onChangeDeadlineDate,\n    onClickDelete, onClickComplete,\n    setNewDetails, setNewDeadline,\n    getDetailsText, getDeadlineDate,\n    today\n  } = props;\n\n  const [isOpen, setIsOpen] = useState(false);\n  const open = () => {\n    getDetailsText();\n    getDeadlineDate();\n    setIsOpen(true);\n  };\n\n  const close = () => {\n    setNewDetails();\n    setNewDeadline();\n    setIsOpen(false);\n  };\n\n  const TodoComplete = () => {\n    onClickComplete(); setIsOpen(false);\n  };\n\n  const TodoDelete = () => {\n    onClickDelete(); setIsOpen(false);\n  };\n\n  let modal;\n  if (isOpen) {\n    modal =\n      <>\n        <div className='modal'>\n          <p>{title}</p>\n          <p>details</p>\n          <textarea className='details'\n            value={detailsText}\n            onChange={onChangeDetailsText} />\n          <p>deadline</p>\n          <input className='deadline'\n            type='date'\n            value={deadlineDate}\n            onChange={onChangeDeadlineDate} />\n          <button onClick={TodoComplete}>complete</button>\n          <button onClick={TodoDelete}>delete</button>\n          <button onClick={close}>close</button>\n        </div>\n        <div className='background'></div>\n      </>\n  }\n\n  let style;\n  switch (true) {\n    case deadline === '':\n      // 緑\n      style = { backgroundColor: ' rgba(0, 128 ,0 ,0.300)' }\n      break;\n    case deadline === today:\n      // 黄\n      style = { backgroundColor: 'rgba(255, 255, 0 ,0.355)' }\n      break;\n    case deadline < today:\n      // 赤\n      style = { backgroundColor: 'rgba(255 , 0 , 0, 0.355)' }\n      break;\n    default:\n      // 緑\n      style = { backgroundColor: ' rgba(0, 128 ,0 ,0.300)' }\n  }\n\n  let icon;\n  if (deadline !== '') {\n    icon = <i class=\"far fa-calendar-alt\"></i>\n  }\n\n  return (\n    <>\n      <ul style={style} className='box' onClick={open}>\n        <li>{title}</li>\n        <li>{details}</li>\n        <li className='date'>\n          {icon} {deadline}\n        </li>\n      </ul>\n      {modal}\n    </>\n  );\n}","import React, { useState } from 'react';\n\nexport const Done = (props) => {\n\n  const { title, details, completionDate, onClickReturn } = props;\n\n  const [isOpen, setIsOpen] = useState(false);\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n\n  let modal;\n  if (isOpen) {\n    modal =\n      <>\n        <div className='modal'>\n          <p>{title}</p>\n          <p>details</p>\n          <p className='details'>{details}</p>\n          <p>Completion Date</p>\n          <p>{completionDate}</p>\n          <button onClick={onClickReturn}>return</button>\n          <button onClick={close}>close</button>\n        </div>\n        <div className='background'></div>\n      </>\n  }\n\n  return (\n    <>\n      <ul className='box' onClick={open}>\n        <li>{title}</li>\n        <li >{details}</li>\n        <li className='date'>\n          <i class=\"far fa-check-circle\"></i> {completionDate}\n        </li>\n      </ul>\n      {modal}\n    </>\n  );\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { Category } from './components/Category';\nimport { Input } from './components/Input';\nimport { Todo } from './components/Todo';\nimport { Done } from './components/Done';\n\nexport const App = () => {\n  // todo\n  const [incompleteTodo, setIncompleteTodo] = useState([\n    { title: 'todo1', details: 'details1', deadline: '2020-9-20' },\n    { title: 'todo2', details: 'details2', deadline: '2021-09-21' },\n    { title: 'todo3', details: 'details3', deadline: '2021-10-30' },\n  ]);\n  // done\n  const [completeTodo, setCompleteTodo] = useState([\n    { title: 'todo4', details: 'details4', completionDate: '2020-12-01' },\n    { title: 'todo5', details: 'details5', completionDate: '2020-12-05' },\n  ]);\n\n  // 時間の取得\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = ('0' + (now.getMonth() + 1)).slice(-2);\n  const date = ('0' + now.getDate()).slice(-2);\n  const today = `${year}-${month}-${date}`;\n\n  // #TODO関連\n  const [todoText, setTodoText] = useState('');\n  const onChangeTodoText = (e) => setTodoText(e.target.value);\n\n  // ##TODO追加\n  const onSubmitAdd = (e) => {\n    e.preventDefault();\n    if (todoText === '') return;\n    const newTodo = [\n      ...incompleteTodo,\n      { title: todoText, details: '', deadline: '' },\n    ];\n    setIncompleteTodo(newTodo);\n    setTodoText('');\n  };\n\n  // ##TODO削除\n  const onClickDelete = (i) => {\n    const newTodo = [...incompleteTodo];\n    newTodo.splice(i, 1);\n    setIncompleteTodo(newTodo);\n  };\n\n  // ##TODO完了\n  const onClickComplete = (i) => {\n    incompleteTodo[i].completionDate = today;\n\n    const newIncompleteTodo = [...incompleteTodo];\n    newIncompleteTodo.splice(i, 1);\n    const newCompleteTodo = [...completeTodo, incompleteTodo[i]];\n    setIncompleteTodo(newIncompleteTodo);\n    setCompleteTodo(newCompleteTodo);\n  };\n\n  // #説明関連\n  const [detailsText, setDetailsText] = useState('');\n  const onChangeDetailsText = (e) => setDetailsText(e.target.value);\n\n  // ##説明文の取得\n  const getDetailsText = (i) => {\n    if (incompleteTodo[i].detailsText === '') {\n      setDetailsText('');\n    } else {\n      setDetailsText(incompleteTodo[i].details);\n    }\n  };\n\n  // ##説明文の更新\n  const setNewDetails = (i) => {\n    incompleteTodo[i].details = detailsText;\n    const newDetails = [...incompleteTodo];\n    setIncompleteTodo(newDetails);\n  };\n\n  // #締め切り関連\n  const [deadlineDate, setDeadlineDate] = useState('');\n  const onChangeDeadlineDate = (e) => setDeadlineDate(e.target.value);\n\n  // ##締め切り日の取得\n  const getDeadlineDate = (i) => {\n    if (incompleteTodo[i].deadline === '') {\n      setDeadlineDate('');\n    } else {\n      setDeadlineDate(incompleteTodo[i].deadline);\n    }\n  };\n\n  // ##締め切り日の更新\n  const setNewDeadline = (i) => {\n    incompleteTodo[i].deadline = deadlineDate;\n    const newDeadline = [...incompleteTodo];\n    setIncompleteTodo(newDeadline);\n  };\n\n  // #DONE関連\n  // ##DONE戻す\n  const onClickReturn = (i) => {\n    const newCompleteTodo = [...completeTodo];\n    newCompleteTodo.splice(i, 1);\n    setCompleteTodo(newCompleteTodo);\n\n    const newTodo = [...incompleteTodo, completeTodo[i]];\n    setIncompleteTodo(newTodo);\n  };\n\n  // #スマホ画面時のtodo⇄done切替ボタン\n  const [toggle, setToggle] = useState(<span className=\"blue\">done</span>);\n\n  const allChecked = () => {\n    if (document.getElementById('todoCheck').checked) {\n      document.getElementById('todoCheck').checked = false;\n      document.getElementById('doneCheck').checked = false;\n      setToggle(<span className=\"blue\">done</span>);\n    } else {\n      document.getElementById('todoCheck').checked = true;\n      document.getElementById('doneCheck').checked = true;\n      setToggle(<span className=\"green\">todo</span>);\n    }\n  };\n\n  return (\n    <div className=\"wrapper show\">\n      {/* header */}\n      <div className=\"logo\">TodoList</div>\n\n      {/* category */}\n      <Category allChecked={allChecked} toggle={toggle} />\n\n      <div className=\"main-wrapper\">\n        <div className=\"left-container\">\n          {/* input */}\n          <Input\n            onSubmitAdd={onSubmitAdd}\n            todoText={todoText}\n            onChangeTodoText={onChangeTodoText}\n          />\n\n          {/* todo */}\n          <input type=\"checkBox\" id=\"todoCheck\"></input>\n          <div className=\"todo\">\n            <p>todo</p>\n            {incompleteTodo.map((todo, i) => {\n              return (\n                <Todo\n                  key={i}\n                  title={todo.title}\n                  details={todo.details}\n                  deadline={todo.deadline}\n                  detailsText={detailsText}\n                  deadlineDate={deadlineDate}\n                  onChangeDetailsText={onChangeDetailsText}\n                  onChangeDeadlineDate={onChangeDeadlineDate}\n                  onClickDelete={() => onClickDelete(i)}\n                  onClickComplete={() => onClickComplete(i)}\n                  setNewDetails={() => setNewDetails(i)}\n                  setNewDeadline={() => setNewDeadline(i)}\n                  getDetailsText={() => getDetailsText(i)}\n                  getDeadlineDate={() => getDeadlineDate(i)}\n                  today={today}\n                />\n              );\n            })}\n          </div>\n        </div>\n\n        <div className=\"right-container\">\n          {/* done */}\n          <input type=\"checkBox\" id=\"doneCheck\"></input>\n          <div className=\"done\">\n            <div className=\"space\"></div>\n            <p>done</p>\n            {completeTodo.map((todo, i) => {\n              return (\n                <Done\n                  key={i}\n                  title={todo.title}\n                  details={todo.details}\n                  completionDate={todo.completionDate}\n                  onClickReturn={() => onClickReturn(i)}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}