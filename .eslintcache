[{"/Users/aiichiro/project/my-todolist/src/index.js":"1","/Users/aiichiro/project/my-todolist/src/App.js":"2"},{"size":202,"mtime":1607843430482,"results":"3","hashOfConfig":"4"},{"size":2703,"mtime":1607931343466,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m7gith",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/aiichiro/project/my-todolist/src/index.js",[],"/Users/aiichiro/project/my-todolist/src/App.js",["11","12"],"import React, { useState } from 'react';\nimport './App.css';\n\nexport const App = () => {\n  const [todoText, setTodoText] = useState('');\n  const [category, setCategory] = useState(['work', 'private']);\n  const [incompleteTodo, setIncompleteTodo] = useState([\n    { title: 'todo1', details: 'details1', deadline: '2020/12/14' },\n    { title: 'todo2', details: 'details2', deadline: '2020/12/30' }\n  ]);\n  const [completeTodo, setCompleteTodo] = useState([\n    { title: 'todo3', details: 'details3', completionDay: '2020/12/1' },\n    { title: 'todo4', details: 'details4', completionDay: '2020/12/5' }\n  ]);\n\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n\n  const onSubmitAdd = (event) => {\n    event.preventDefault();\n    const newTodo = [...incompleteTodo, { title: todoText, details: '', deadline: '' }];\n    setIncompleteTodo(newTodo);\n    setTodoText('');\n    console.log(incompleteTodo);\n  };\n\n  return (\n    <>\n      {/* header */}\n      <div className='logo'>Logo</div>\n\n      <div className='main-wrapper'>\n        <div className='left-container'>\n\n          {/* category */}\n          <div className='category'>\n            {category.map((categoryName) => {\n              return (\n                <p key={categoryName}>{categoryName}</p>\n              );\n            })}\n            <p>+</p>\n          </div>\n\n          {/* input */}\n          <form onSubmit={onSubmitAdd}>\n            <input placeholder='Please add new TODO' value={todoText} onChange={onChangeTodoText} />\n          </form>\n\n          {/* todo */}\n          <div className='todo'>\n            {incompleteTodo.map((todo, index) => {\n              return (\n                <ul key={index} className='box'>\n                  <li>{todo.title}</li>\n                  <li>{todo.details}</li>\n                  <li>{todo.deadline}</li>\n                </ul>\n              );\n            })}\n          </div>\n        </div>\n\n        <div className='right-container'>\n          {/* done */}\n          <div className='done'>\n            <p>done</p>\n            <div className='space'></div>\n            {completeTodo.map((todo, index) => {\n              return (\n                <ul key={index} className='box'>\n                  <li>{todo.title}</li>\n                  <li>{todo.details}</li>\n                  <li>{todo.completionDay}</li>\n                </ul>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* todo-modal */}\n      <div className='modal'>\n        <p>title</p>\n        <p>details</p>\n        <textarea />\n        <p>deadline</p>\n        <input type='date' />\n        <button>complete</button>\n        <button>delete</button>\n      </div>\n    </>\n  );\n}\n",{"ruleId":"13","severity":1,"message":"14","line":6,"column":20,"nodeType":"15","messageId":"16","endLine":6,"endColumn":31},{"ruleId":"13","severity":1,"message":"17","line":11,"column":24,"nodeType":"15","messageId":"16","endLine":11,"endColumn":39},"no-unused-vars","'setCategory' is assigned a value but never used.","Identifier","unusedVar","'setCompleteTodo' is assigned a value but never used."]